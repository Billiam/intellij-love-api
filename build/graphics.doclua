BASE_URL = 'https://love2d.org/wiki/'

function getDocumentationUrl(name)
  return BASE_URL .. name
end

function getQuickNavigateDocumentation(name)
  return '[LOVE]\n' .. SIGNATURES[name]
end


-- begin signatures
SIGNATURES = {
  ["love.graphics.arc"] = [=[love.graphics.arc({DrawMode} mode, {number} x, {number} y, {number} radius, {number} angle1, {number} angle2, {number} segments)]=],
  ["love.graphics.circle"] = [=[love.graphics.circle({DrawMode} mode, {number} x, {number} y, {number} radius, {number} segments)]=],
  ["love.graphics.clear"] = [=[love.graphics.clear()]=],
  ["love.graphics.draw"] = [=[love.graphics.draw({Drawable} drawable, {number} x, {number} y, {number} r, {number} sx, {number} sy, {number} ox, {number} oy, {number} kx, {number} ky)]=],
  ["love.graphics.getBackgroundColor"] = [=[{number} r, {number} g, {number} b, {number} a = love.graphics.getBackgroundColor()]=],
  ["love.graphics.getBlendMode"] = [=[{BlendMode} mode = love.graphics.getBlendMode()]=],
  ["love.graphics.getCanvas"] = [=[{Canvas} canvas = love.graphics.getCanvas()]=],
  ["love.graphics.getColor"] = [=[{number} r, {number} g, {number} b, {number} a = love.graphics.getColor()]=],
  ["love.graphics.getColorMask"] = [=[{boolean} r, {boolean} g, {boolean} b, {boolean} a = love.graphics.getColorMask()]=],
  ["love.graphics.getDefaultFilter"] = [=[{FilterMode} min, {FilterMode} mag, {number} anisotropy = love.graphics.getDefaultFilter()]=],
  ["love.graphics.getDimensions"] = [=[{number} width, {number} height = love.graphics.getDimensions()]=],
  ["love.graphics.getFSAA"] = [=[{number} samples = love.graphics.getFSAA()]=],
  ["love.graphics.getFont"] = [=[{Font} font = love.graphics.getFont()]=],
  ["love.graphics.getHeight"] = [=[{number} height = love.graphics.getHeight()]=],
  ["love.graphics.getLineJoin"] = [=[{LineJoin} join = love.graphics.getLineJoin()]=],
  ["love.graphics.getLineStyle"] = [=[{LineStyle} style = love.graphics.getLineStyle()]=],
  ["love.graphics.getLineWidth"] = [=[{number} width = love.graphics.getLineWidth()]=],
  ["love.graphics.getFullscreenModes"] = [=[{table} modes = love.graphics.getFullscreenModes()]=],
  ["love.graphics.getShader"] = [=[{Shader} shader = love.graphics.getShader()]=],
  ["love.graphics.getSystemLimit"] = [=[{number} limit = love.graphics.getSystemLimit({GraphicsLimit} limittype)]=],
  ["love.graphics.getPointSize"] = [=[{number} size = love.graphics.getPointSize()]=],
  ["love.graphics.getPointStyle"] = [=[{PointStyle} style = love.graphics.getPointStyle()]=],
  ["love.graphics.getRendererInfo"] = [=[{string} name, {string} version, {string} vendor, {string} device = love.graphics.getRendererInfo()]=],
  ["love.graphics.getScissor"] = [=[{number} x, {number} y, {number} width, {number} height = love.graphics.getScissor()]=],
  ["love.graphics.getWidth"] = [=[{number} width = love.graphics.getWidth()]=],
  ["love.graphics.isSupported"] = [=[{boolean} isSupported = love.graphics.isSupported({GraphicsFeature} supportN)]=],
  ["love.graphics.isWireframe"] = [=[{boolean} wireframe = love.graphics.isWireframe()]=],
  ["love.graphics.line"] = [=[love.graphics.line({number} x1, {number} y1, {number} x2, {number} y2, {number} ...)]=],
  ["love.graphics.newCanvas"] = [=[{Canvas} canvas = love.graphics.newCanvas({number} width, {number} height, {TextureFormat} texture_type, {number} fsaa)]=],
  ["love.graphics.newFont"] = [=[{Font} font = love.graphics.newFont({string} filename, {number} size)]=],
  ["love.graphics.newMesh"] = [=[{Mesh} mesh = love.graphics.newMesh({table} vertices, {Texture} texture, {MeshDrawMode} mode)]=],
  ["love.graphics.newImage"] = [=[{Image} image = love.graphics.newImage({string} filename, {TextureFormat} format)]=],
  ["love.graphics.newImageFont"] = [=[{Font} font = love.graphics.newImageFont({string} filename, {string} glyphs)]=],
  ["love.graphics.newParticleSystem"] = [=[{ParticleSystem} system = love.graphics.newParticleSystem({Texture} texture, {number} buffer)]=],
  ["love.graphics.newShader"] = [=[{Shader} shader = love.graphics.newShader({string} code)]=],
  ["love.graphics.newQuad"] = [=[{Quad} quad = love.graphics.newQuad({number} x, {number} y, {number} width, {number} height, {number} sw, {number} sh)]=],
  ["love.graphics.newScreenshot"] = [=[{ImageData} screenshot = love.graphics.newScreenshot()]=],
  ["love.graphics.newSpriteBatch"] = [=[{SpriteBatch} spriteBatch = love.graphics.newSpriteBatch({Texture} texture, {number} size, {SpriteBatchUsage} usage)]=],
  ["love.graphics.origin"] = [=[love.graphics.origin()]=],
  ["love.graphics.point"] = [=[love.graphics.point({number} x, {number} y)]=],
  ["love.graphics.polygon"] = [=[love.graphics.polygon({DrawMode} mode, {number} ...)]=],
  ["love.graphics.pop"] = [=[love.graphics.pop()]=],
  ["love.graphics.present"] = [=[love.graphics.present()]=],
  ["love.graphics.print"] = [=[love.graphics.print({string} text, {number} x, {number} y, {number} r, {number} sx, {number} sy, {number} ox, {number} oy, {number} kx, {number} ky)]=],
  ["love.graphics.printf"] = [=[love.graphics.printf({string} text, {number} x, {number} y, {number} limit, {AlignMode} align, {number} r, {number} sx, {number} sy, {number} ox, {number} oy, {number} kx, {number} ky)]=],
  ["love.graphics.push"] = [=[love.graphics.push()]=],
  ["love.graphics.rectangle"] = [=[love.graphics.rectangle({DrawMode} mode, {number} x, {number} y, {number} width, {number} height)]=],
  ["love.graphics.reset"] = [=[love.graphics.reset()]=],
  ["love.graphics.rotate"] = [=[love.graphics.rotate({number} angle)]=],
  ["love.graphics.scale"] = [=[love.graphics.scale({number} sx, {number} sy)]=],
  ["love.graphics.setBackgroundColor"] = [=[love.graphics.setBackgroundColor({number} r, {number} g, {number} b, {number} a)]=],
  ["love.graphics.setBlendMode"] = [=[love.graphics.setBlendMode({BlendMode} mode)]=],
  ["love.graphics.setCanvas"] = [=[love.graphics.setCanvas()]=],
  ["love.graphics.setColor"] = [=[love.graphics.setColor({number} red, {number} green, {number} blue, {number} alpha)]=],
  ["love.graphics.setColorMask"] = [=[love.graphics.setColorMask()]=],
  ["love.graphics.setDefaultFilter"] = [=[love.graphics.setDefaultFilter({FilterMode} min, {FilterMode} mag, {number} anisotropy)]=],
  ["love.graphics.setFont"] = [=[love.graphics.setFont({Font} font)]=],
  ["love.graphics.setInvertedStencil"] = [=[love.graphics.setInvertedStencil()]=],
  ["love.graphics.setLineJoin"] = [=[love.graphics.setLineJoin({LineJoin} join)]=],
  ["love.graphics.setLineStyle"] = [=[love.graphics.setLineStyle({LineStyle} style)]=],
  ["love.graphics.setLineWidth"] = [=[love.graphics.setLineWidth({number} width)]=],
  ["love.graphics.setNewFont"] = [=[{Font} font = love.graphics.setNewFont({number} size)]=],
  ["love.graphics.setShader"] = [=[love.graphics.setShader()]=],
  ["love.graphics.setPointSize"] = [=[love.graphics.setPointSize({number} size)]=],
  ["love.graphics.setPointStyle"] = [=[love.graphics.setPointStyle({PointStyle} style)]=],
  ["love.graphics.setScissor"] = [=[love.graphics.setScissor()]=],
  ["love.graphics.setWireframe"] = [=[love.graphics.setWireframe({boolean} enable)]=],
  ["love.graphics.setStencil"] = [=[love.graphics.setStencil()]=],
  ["love.graphics.shear"] = [=[love.graphics.shear({number} kx, {number} ky)]=],
  ["love.graphics.translate"] = [=[love.graphics.translate({number} dx, {number} dy)]=]
}